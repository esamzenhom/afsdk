group = "com.abk.afsdk"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.8.22"
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.1.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://developer.huawei.com/repo/' } // ✅ Add this
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    namespace = "com.abk.afsdk"

    compileSdk = 35

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 21
    }

//    configurations.maybeCreate("default")
//    artifacts.add("default", file('libs/AFSDK_V0.0.236_236.aar'))
repositories {
    google()
    mavenCentral()
    maven { url 'https://developer.huawei.com/repo/' } // ✅ Add this
}
    dependencies {
        implementation fileTree(dir: 'libs', includes: ['*.jar', '*.aar'])

        // testImplementation("org.jetbrains.kotlin:kotlin-test")
        // testImplementation("org.mockito:mockito-core:5.0.0")
//        compileOnly files('libs/AFSDK_V0.0.236_236.jar')
//        implementation files('libs/library-qrcode-1.0.0.aar')
        implementation 'com.huawei.hms:scanplus:2.12.0.300'
        implementation 'com.google.mlkit:barcode-scanning:17.2.0'
        implementation 'com.google.android.material:material:1.2.1'
        implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
        implementation 'org.apache.commons:commons-lang3:3.7'
        implementation 'androidx.camera:camera-camera2:1.1.0'
        implementation 'androidx.camera:camera-lifecycle:1.1.0'
        implementation 'androidx.camera:camera-view:1.1.0-beta02'

    }


    // testOptions {
    //     unitTests.all {
    //         useJUnitPlatform()

    //         testLogging {
    //            events "passed", "skipped", "failed", "standardOut", "standardError"
    //            outputs.upToDateWhen {false}
    //            showStandardStreams = true
    //         }
    //     }
    // }
}
